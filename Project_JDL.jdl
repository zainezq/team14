// Ben
entity UserProfile {
    created Instant required
    name String required maxlength(32)
    profilePic ImageBlob
    gender Genders required
    location String
    position Positions
    referee Boolean required
}


relationship OneToMany {
    UserProfile{contacts} to Contact{userProfile}
}



entity AvailableDate {
    fromTime Instant required,
    toTime Instant required,
    isAvailable Boolean required
}

relationship OneToMany {
    UserProfile{availableDates} to AvailableDate
}


enum Genders {
    MALE
    FEMALE
    OTHER
}

enum Positions{
    GK(Goalkeeper)
    LB(LeftBack)
    CB(CentreBack)
    RB(RightBack)
    DM(DefenceMid)
    CM(CentreMid)
    AM(AttackMid)
    LM(LeftMid)
    RM(RightMid)
    ST(Striker)
    LW(LeftWing)
    RW(RightWing)
}


// Shlok

//Entities





// Define the enum for contact type
//Each player can have a mail and/or a contact number
enum ContactType {
    EMAIL
    PHONE_NUMBER
    INSTAGRAM
    TWITTER
    WEBSITE
}

//Relationships


// Define the relationship between Player and Contact
//each player can have multiple contacts

//Abdelmalek


entity Tournament {
    name String required maxlength(128),
    startDate Instant required,
    endDate Instant required,
    location String required,
    maxTeams Integer required max(32) min(4)
}
//

//
//
relationship OneToMany {
    Tournament{matches} to Match{tournament}
}
//
relationship ManyToMany {
    Tournament{teams} to Team{tournaments}
}


////zaine
//
entity PitchBooking {
    bookingDate Instant required, // bookingDate refers to the timestamp that the pitch booking was actually made at
    startTime Instant required,
    endTime Instant required,
}

relationship OneToMany{
    Team{bookings} to PitchBooking{team}
}

relationship OneToMany {
    Pitch to PitchBooking // One pitch can have many bookings
}

entity Pitch {
    name String,
    location String,
}
//
//

//
////zhiwen

entity Comment {
    rating Integer min(0) max(5) required
    content String maxlength(256)
    likeCount Integer min(0)
}

relationship OneToOne {
    Comment{replyingTo} to Comment
}


relationship OneToOne {
    Comment{author} to UserProfile
    Comment{targetUser} to UserProfile
    Comment{match} to Match
}





//link to muneeb
//relationship ManyToOne {
//    Comment{match} to Match
//}

//Jon
entity Match {
    homeScore Integer min(0)
    awayScore Integer min(0)
    date Instant required
}

relationship OneToOne {
    Match{referee} to UserProfile
}

relationship OneToOne {
    Match{pitch} to Pitch
}

relationship OneToOne {
    Match{home} to Team
    Match{away} to Team
}

////Muneeb

entity Team {
    created Instant required,

    name String minlength(2) maxlength(40) required,
    description String maxlength(512),
    image ImageBlob,
    colour String maxlength(6), // Stored as hex string

    schedule String maxlength(64),
    playType PlayType
}

relationship OneToMany {
    Team{availableDates} to AvailableDate
}
relationship OneToMany {
    Team{members} to UserProfile{team}
}


entity Contact {
    contactType ContactType,
    contactValue String
}

relationship OneToMany {
    Team{contacts} to Contact
}



relationship OneToOne {
    Team{owner} to UserProfile{teamOwned}
}
//
//
enum PlayType {
    SOCIAL(Social),
    COMPETITIVE(Competitive)
}
//
//enum ContactType {

//}
